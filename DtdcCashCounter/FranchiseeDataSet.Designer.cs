//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DtdcCashCounter {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("FranchiseeDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class FranchiseeDataSet : global::System.Data.DataSet {
        
        private FranchiseeDataTable tableFranchisee;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public FranchiseeDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected FranchiseeDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Franchisee"] != null)) {
                    base.Tables.Add(new FranchiseeDataTable(ds.Tables["Franchisee"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FranchiseeDataTable Franchisee {
            get {
                return this.tableFranchisee;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            FranchiseeDataSet cln = ((FranchiseeDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Franchisee"] != null)) {
                    base.Tables.Add(new FranchiseeDataTable(ds.Tables["Franchisee"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableFranchisee = ((FranchiseeDataTable)(base.Tables["Franchisee"]));
            if ((initTable == true)) {
                if ((this.tableFranchisee != null)) {
                    this.tableFranchisee.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "FranchiseeDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FranchiseeDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFranchisee = new FranchiseeDataTable();
            base.Tables.Add(this.tableFranchisee);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeFranchisee() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            FranchiseeDataSet ds = new FranchiseeDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void FranchiseeRowChangeEventHandler(object sender, FranchiseeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FranchiseeDataTable : global::System.Data.TypedTableBase<FranchiseeRow> {
            
            private global::System.Data.DataColumn columnF_Id;
            
            private global::System.Data.DataColumn columnPF_Code;
            
            private global::System.Data.DataColumn columnF_Address;
            
            private global::System.Data.DataColumn columnOwnerName;
            
            private global::System.Data.DataColumn columnBranchName;
            
            private global::System.Data.DataColumn columnGstNo;
            
            private global::System.Data.DataColumn columnFranchisee_Name;
            
            private global::System.Data.DataColumn columnContactNo;
            
            private global::System.Data.DataColumn columnBranch_Area;
            
            private global::System.Data.DataColumn columnDatetime_Fr;
            
            private global::System.Data.DataColumn columnPan_No;
            
            private global::System.Data.DataColumn columnFirm_Id;
            
            private global::System.Data.DataColumn columnSendermail;
            
            private global::System.Data.DataColumn columnpassword;
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnBankname;
            
            private global::System.Data.DataColumn columnAccountno;
            
            private global::System.Data.DataColumn columnIFSCcode;
            
            private global::System.Data.DataColumn columnBranch;
            
            private global::System.Data.DataColumn columnAccounttype;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FranchiseeDataTable() {
                this.TableName = "Franchisee";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal FranchiseeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected FranchiseeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn F_IdColumn {
                get {
                    return this.columnF_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PF_CodeColumn {
                get {
                    return this.columnPF_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn F_AddressColumn {
                get {
                    return this.columnF_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OwnerNameColumn {
                get {
                    return this.columnOwnerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BranchNameColumn {
                get {
                    return this.columnBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GstNoColumn {
                get {
                    return this.columnGstNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Franchisee_NameColumn {
                get {
                    return this.columnFranchisee_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ContactNoColumn {
                get {
                    return this.columnContactNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Branch_AreaColumn {
                get {
                    return this.columnBranch_Area;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Datetime_FrColumn {
                get {
                    return this.columnDatetime_Fr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Pan_NoColumn {
                get {
                    return this.columnPan_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Firm_IdColumn {
                get {
                    return this.columnFirm_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SendermailColumn {
                get {
                    return this.columnSendermail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn passwordColumn {
                get {
                    return this.columnpassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BanknameColumn {
                get {
                    return this.columnBankname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AccountnoColumn {
                get {
                    return this.columnAccountno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IFSCcodeColumn {
                get {
                    return this.columnIFSCcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BranchColumn {
                get {
                    return this.columnBranch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AccounttypeColumn {
                get {
                    return this.columnAccounttype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FranchiseeRow this[int index] {
                get {
                    return ((FranchiseeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event FranchiseeRowChangeEventHandler FranchiseeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event FranchiseeRowChangeEventHandler FranchiseeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event FranchiseeRowChangeEventHandler FranchiseeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event FranchiseeRowChangeEventHandler FranchiseeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddFranchiseeRow(FranchiseeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FranchiseeRow AddFranchiseeRow(
                        string PF_Code, 
                        string F_Address, 
                        string OwnerName, 
                        string BranchName, 
                        string GstNo, 
                        string Franchisee_Name, 
                        string ContactNo, 
                        string Branch_Area, 
                        System.DateTime Datetime_Fr, 
                        string Pan_No, 
                        long Firm_Id, 
                        string Sendermail, 
                        string password, 
                        string AccountName, 
                        string Bankname, 
                        string Accountno, 
                        string IFSCcode, 
                        string Branch, 
                        string Accounttype) {
                FranchiseeRow rowFranchiseeRow = ((FranchiseeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PF_Code,
                        F_Address,
                        OwnerName,
                        BranchName,
                        GstNo,
                        Franchisee_Name,
                        ContactNo,
                        Branch_Area,
                        Datetime_Fr,
                        Pan_No,
                        Firm_Id,
                        Sendermail,
                        password,
                        AccountName,
                        Bankname,
                        Accountno,
                        IFSCcode,
                        Branch,
                        Accounttype};
                rowFranchiseeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFranchiseeRow);
                return rowFranchiseeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FranchiseeRow FindByPF_Code(string PF_Code) {
                return ((FranchiseeRow)(this.Rows.Find(new object[] {
                            PF_Code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FranchiseeDataTable cln = ((FranchiseeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FranchiseeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnF_Id = base.Columns["F_Id"];
                this.columnPF_Code = base.Columns["PF_Code"];
                this.columnF_Address = base.Columns["F_Address"];
                this.columnOwnerName = base.Columns["OwnerName"];
                this.columnBranchName = base.Columns["BranchName"];
                this.columnGstNo = base.Columns["GstNo"];
                this.columnFranchisee_Name = base.Columns["Franchisee_Name"];
                this.columnContactNo = base.Columns["ContactNo"];
                this.columnBranch_Area = base.Columns["Branch_Area"];
                this.columnDatetime_Fr = base.Columns["Datetime_Fr"];
                this.columnPan_No = base.Columns["Pan_No"];
                this.columnFirm_Id = base.Columns["Firm_Id"];
                this.columnSendermail = base.Columns["Sendermail"];
                this.columnpassword = base.Columns["password"];
                this.columnAccountName = base.Columns["AccountName"];
                this.columnBankname = base.Columns["Bankname"];
                this.columnAccountno = base.Columns["Accountno"];
                this.columnIFSCcode = base.Columns["IFSCcode"];
                this.columnBranch = base.Columns["Branch"];
                this.columnAccounttype = base.Columns["Accounttype"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnF_Id = new global::System.Data.DataColumn("F_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF_Id);
                this.columnPF_Code = new global::System.Data.DataColumn("PF_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPF_Code);
                this.columnF_Address = new global::System.Data.DataColumn("F_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF_Address);
                this.columnOwnerName = new global::System.Data.DataColumn("OwnerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOwnerName);
                this.columnBranchName = new global::System.Data.DataColumn("BranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchName);
                this.columnGstNo = new global::System.Data.DataColumn("GstNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGstNo);
                this.columnFranchisee_Name = new global::System.Data.DataColumn("Franchisee_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFranchisee_Name);
                this.columnContactNo = new global::System.Data.DataColumn("ContactNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactNo);
                this.columnBranch_Area = new global::System.Data.DataColumn("Branch_Area", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch_Area);
                this.columnDatetime_Fr = new global::System.Data.DataColumn("Datetime_Fr", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatetime_Fr);
                this.columnPan_No = new global::System.Data.DataColumn("Pan_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPan_No);
                this.columnFirm_Id = new global::System.Data.DataColumn("Firm_Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirm_Id);
                this.columnSendermail = new global::System.Data.DataColumn("Sendermail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSendermail);
                this.columnpassword = new global::System.Data.DataColumn("password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpassword);
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.columnBankname = new global::System.Data.DataColumn("Bankname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankname);
                this.columnAccountno = new global::System.Data.DataColumn("Accountno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountno);
                this.columnIFSCcode = new global::System.Data.DataColumn("IFSCcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIFSCcode);
                this.columnBranch = new global::System.Data.DataColumn("Branch", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranch);
                this.columnAccounttype = new global::System.Data.DataColumn("Accounttype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccounttype);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPF_Code}, true));
                this.columnF_Id.AutoIncrement = true;
                this.columnF_Id.AutoIncrementSeed = -1;
                this.columnF_Id.AutoIncrementStep = -1;
                this.columnF_Id.AllowDBNull = false;
                this.columnF_Id.ReadOnly = true;
                this.columnPF_Code.AllowDBNull = false;
                this.columnPF_Code.Unique = true;
                this.columnPF_Code.MaxLength = 20;
                this.columnF_Address.MaxLength = 1000;
                this.columnOwnerName.MaxLength = 50;
                this.columnBranchName.MaxLength = 100;
                this.columnGstNo.MaxLength = 50;
                this.columnFranchisee_Name.MaxLength = 100;
                this.columnContactNo.MaxLength = 20;
                this.columnBranch_Area.MaxLength = 20;
                this.columnPan_No.MaxLength = 100;
                this.columnSendermail.MaxLength = 100;
                this.columnpassword.MaxLength = 50;
                this.columnAccountName.MaxLength = 200;
                this.columnBankname.MaxLength = 200;
                this.columnAccountno.MaxLength = 200;
                this.columnIFSCcode.MaxLength = 200;
                this.columnBranch.MaxLength = 200;
                this.columnAccounttype.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FranchiseeRow NewFranchiseeRow() {
                return ((FranchiseeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FranchiseeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FranchiseeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FranchiseeRowChanged != null)) {
                    this.FranchiseeRowChanged(this, new FranchiseeRowChangeEvent(((FranchiseeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FranchiseeRowChanging != null)) {
                    this.FranchiseeRowChanging(this, new FranchiseeRowChangeEvent(((FranchiseeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FranchiseeRowDeleted != null)) {
                    this.FranchiseeRowDeleted(this, new FranchiseeRowChangeEvent(((FranchiseeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FranchiseeRowDeleting != null)) {
                    this.FranchiseeRowDeleting(this, new FranchiseeRowChangeEvent(((FranchiseeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveFranchiseeRow(FranchiseeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FranchiseeDataSet ds = new FranchiseeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FranchiseeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FranchiseeRow : global::System.Data.DataRow {
            
            private FranchiseeDataTable tableFranchisee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal FranchiseeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFranchisee = ((FranchiseeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int F_Id {
                get {
                    return ((int)(this[this.tableFranchisee.F_IdColumn]));
                }
                set {
                    this[this.tableFranchisee.F_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PF_Code {
                get {
                    return ((string)(this[this.tableFranchisee.PF_CodeColumn]));
                }
                set {
                    this[this.tableFranchisee.PF_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string F_Address {
                get {
                    try {
                        return ((string)(this[this.tableFranchisee.F_AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F_Address\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.F_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string OwnerName {
                get {
                    try {
                        return ((string)(this[this.tableFranchisee.OwnerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OwnerName\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.OwnerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BranchName {
                get {
                    try {
                        return ((string)(this[this.tableFranchisee.BranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchName\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.BranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string GstNo {
                get {
                    try {
                        return ((string)(this[this.tableFranchisee.GstNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GstNo\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.GstNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Franchisee_Name {
                get {
                    try {
                        return ((string)(this[this.tableFranchisee.Franchisee_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Franchisee_Name\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.Franchisee_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ContactNo {
                get {
                    try {
                        return ((string)(this[this.tableFranchisee.ContactNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactNo\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.ContactNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Branch_Area {
                get {
                    try {
                        return ((string)(this[this.tableFranchisee.Branch_AreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch_Area\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.Branch_AreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Datetime_Fr {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFranchisee.Datetime_FrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Datetime_Fr\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.Datetime_FrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Pan_No {
                get {
                    try {
                        return ((string)(this[this.tableFranchisee.Pan_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pan_No\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.Pan_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long Firm_Id {
                get {
                    try {
                        return ((long)(this[this.tableFranchisee.Firm_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Firm_Id\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.Firm_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Sendermail {
                get {
                    try {
                        return ((string)(this[this.tableFranchisee.SendermailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sendermail\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.SendermailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string password {
                get {
                    try {
                        return ((string)(this[this.tableFranchisee.passwordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'password\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.passwordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AccountName {
                get {
                    try {
                        return ((string)(this[this.tableFranchisee.AccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountName\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Bankname {
                get {
                    try {
                        return ((string)(this[this.tableFranchisee.BanknameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bankname\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.BanknameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Accountno {
                get {
                    try {
                        return ((string)(this[this.tableFranchisee.AccountnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Accountno\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.AccountnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IFSCcode {
                get {
                    try {
                        return ((string)(this[this.tableFranchisee.IFSCcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IFSCcode\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.IFSCcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Branch {
                get {
                    try {
                        return ((string)(this[this.tableFranchisee.BranchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Branch\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.BranchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Accounttype {
                get {
                    try {
                        return ((string)(this[this.tableFranchisee.AccounttypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Accounttype\' in table \'Franchisee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFranchisee.AccounttypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsF_AddressNull() {
                return this.IsNull(this.tableFranchisee.F_AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetF_AddressNull() {
                this[this.tableFranchisee.F_AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOwnerNameNull() {
                return this.IsNull(this.tableFranchisee.OwnerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOwnerNameNull() {
                this[this.tableFranchisee.OwnerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBranchNameNull() {
                return this.IsNull(this.tableFranchisee.BranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBranchNameNull() {
                this[this.tableFranchisee.BranchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGstNoNull() {
                return this.IsNull(this.tableFranchisee.GstNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGstNoNull() {
                this[this.tableFranchisee.GstNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFranchisee_NameNull() {
                return this.IsNull(this.tableFranchisee.Franchisee_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFranchisee_NameNull() {
                this[this.tableFranchisee.Franchisee_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsContactNoNull() {
                return this.IsNull(this.tableFranchisee.ContactNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetContactNoNull() {
                this[this.tableFranchisee.ContactNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBranch_AreaNull() {
                return this.IsNull(this.tableFranchisee.Branch_AreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBranch_AreaNull() {
                this[this.tableFranchisee.Branch_AreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDatetime_FrNull() {
                return this.IsNull(this.tableFranchisee.Datetime_FrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDatetime_FrNull() {
                this[this.tableFranchisee.Datetime_FrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPan_NoNull() {
                return this.IsNull(this.tableFranchisee.Pan_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPan_NoNull() {
                this[this.tableFranchisee.Pan_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFirm_IdNull() {
                return this.IsNull(this.tableFranchisee.Firm_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFirm_IdNull() {
                this[this.tableFranchisee.Firm_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSendermailNull() {
                return this.IsNull(this.tableFranchisee.SendermailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSendermailNull() {
                this[this.tableFranchisee.SendermailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IspasswordNull() {
                return this.IsNull(this.tableFranchisee.passwordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetpasswordNull() {
                this[this.tableFranchisee.passwordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAccountNameNull() {
                return this.IsNull(this.tableFranchisee.AccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAccountNameNull() {
                this[this.tableFranchisee.AccountNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBanknameNull() {
                return this.IsNull(this.tableFranchisee.BanknameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBanknameNull() {
                this[this.tableFranchisee.BanknameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAccountnoNull() {
                return this.IsNull(this.tableFranchisee.AccountnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAccountnoNull() {
                this[this.tableFranchisee.AccountnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIFSCcodeNull() {
                return this.IsNull(this.tableFranchisee.IFSCcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIFSCcodeNull() {
                this[this.tableFranchisee.IFSCcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBranchNull() {
                return this.IsNull(this.tableFranchisee.BranchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBranchNull() {
                this[this.tableFranchisee.BranchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAccounttypeNull() {
                return this.IsNull(this.tableFranchisee.AccounttypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAccounttypeNull() {
                this[this.tableFranchisee.AccounttypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class FranchiseeRowChangeEvent : global::System.EventArgs {
            
            private FranchiseeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FranchiseeRowChangeEvent(FranchiseeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FranchiseeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DtdcCashCounter.FranchiseeDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FranchiseeTableAdapter : global::System.ComponentModel.Component {
        
        private global::Microsoft.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::Microsoft.Data.SqlClient.SqlConnection _connection;
        
        private global::Microsoft.Data.SqlClient.SqlTransaction _transaction;
        
        private global::Microsoft.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public FranchiseeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Microsoft.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Microsoft.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Microsoft.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Microsoft.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Microsoft.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Microsoft.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Franchisee";
            tableMapping.ColumnMappings.Add("F_Id", "F_Id");
            tableMapping.ColumnMappings.Add("PF_Code", "PF_Code");
            tableMapping.ColumnMappings.Add("F_Address", "F_Address");
            tableMapping.ColumnMappings.Add("OwnerName", "OwnerName");
            tableMapping.ColumnMappings.Add("BranchName", "BranchName");
            tableMapping.ColumnMappings.Add("GstNo", "GstNo");
            tableMapping.ColumnMappings.Add("Franchisee_Name", "Franchisee_Name");
            tableMapping.ColumnMappings.Add("ContactNo", "ContactNo");
            tableMapping.ColumnMappings.Add("Branch_Area", "Branch_Area");
            tableMapping.ColumnMappings.Add("Datetime_Fr", "Datetime_Fr");
            tableMapping.ColumnMappings.Add("Pan_No", "Pan_No");
            tableMapping.ColumnMappings.Add("Firm_Id", "Firm_Id");
            tableMapping.ColumnMappings.Add("Sendermail", "Sendermail");
            tableMapping.ColumnMappings.Add("password", "password");
            tableMapping.ColumnMappings.Add("AccountName", "AccountName");
            tableMapping.ColumnMappings.Add("Bankname", "Bankname");
            tableMapping.ColumnMappings.Add("Accountno", "Accountno");
            tableMapping.ColumnMappings.Add("IFSCcode", "IFSCcode");
            tableMapping.ColumnMappings.Add("Branch", "Branch");
            tableMapping.ColumnMappings.Add("Accounttype", "Accounttype");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Franchisee] WHERE (([PF_Code] = @Original_PF_Code))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Microsoft.Data.SqlClient.SqlParameter param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_PF_Code";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PF_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Franchisee] ([PF_Code], [F_Address], [OwnerName], [BranchName], [GstNo], [Franchisee_Name], [ContactNo], [Branch_Area], [Datetime_Fr], [Pan_No], [Firm_Id], [Sendermail], [password], [AccountName], [Bankname], [Accountno], [IFSCcode], [Branch], [Accounttype]) VALUES (@PF_Code, @F_Address, @OwnerName, @BranchName, @GstNo, @Franchisee_Name, @ContactNo, @Branch_Area, @Datetime_Fr, @Pan_No, @Firm_Id, @Sendermail, @password, @AccountName, @Bankname, @Accountno, @IFSCcode, @Branch, @Accounttype)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@PF_Code";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PF_Code";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@F_Address";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "F_Address";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@OwnerName";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "OwnerName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@BranchName";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "BranchName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@GstNo";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "GstNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Franchisee_Name";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Franchisee_Name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ContactNo";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ContactNo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Branch_Area";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Branch_Area";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Datetime_Fr";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "Datetime_Fr";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Pan_No";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Pan_No";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Firm_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SqlDbType = global::System.Data.SqlDbType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "Firm_Id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Sendermail";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Sendermail";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@password";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "password";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@AccountName";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "AccountName";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Bankname";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Bankname";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Accountno";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Accountno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IFSCcode";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "IFSCcode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Branch";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Branch";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Accounttype";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Accounttype";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Franchisee] SET [PF_Code] = @PF_Code, [F_Address] = @F_Address, [OwnerName] = @OwnerName, [BranchName] = @BranchName, [GstNo] = @GstNo, [Franchisee_Name] = @Franchisee_Name, [ContactNo] = @ContactNo, [Branch_Area] = @Branch_Area, [Datetime_Fr] = @Datetime_Fr, [Pan_No] = @Pan_No, [Firm_Id] = @Firm_Id, [Sendermail] = @Sendermail, [password] = @password, [AccountName] = @AccountName, [Bankname] = @Bankname, [Accountno] = @Accountno, [IFSCcode] = @IFSCcode, [Branch] = @Branch, [Accounttype] = @Accounttype WHERE (([PF_Code] = @Original_PF_Code))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@PF_Code";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PF_Code";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@F_Address";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "F_Address";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@OwnerName";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "OwnerName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@BranchName";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "BranchName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@GstNo";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "GstNo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Franchisee_Name";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Franchisee_Name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ContactNo";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ContactNo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Branch_Area";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Branch_Area";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Datetime_Fr";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "Datetime_Fr";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Pan_No";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Pan_No";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Firm_Id";
            param.DbType = global::System.Data.DbType.Int64;
            param.SqlDbType = global::System.Data.SqlDbType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "Firm_Id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Sendermail";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Sendermail";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@password";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "password";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@AccountName";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "AccountName";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Bankname";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Bankname";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Accountno";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Accountno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IFSCcode";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "IFSCcode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Branch";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Branch";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Accounttype";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "Accounttype";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_PF_Code";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "PF_Code";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Microsoft.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["db_a92afa_vbexpressdbConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Microsoft.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT F_Id, PF_Code, F_Address, OwnerName, BranchName, GstNo, Franchisee_Name, ContactNo, Branch_Area, Datetime_Fr, Pan_No, Firm_Id, Sendermail, password, AccountName, Bankname, Accountno, IFSCcode, Branch, 
                  Accounttype
FROM     Franchisee";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FranchiseeDataSet.FranchiseeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FranchiseeDataSet.FranchiseeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FranchiseeDataSet.FranchiseeDataTable dataTable = new FranchiseeDataSet.FranchiseeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FranchiseeDataSet.FranchiseeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FranchiseeDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Franchisee");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_PF_Code) {
            if ((Original_PF_Code == null)) {
                throw new global::System.ArgumentNullException("Original_PF_Code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_PF_Code));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string PF_Code, 
                    string F_Address, 
                    string OwnerName, 
                    string BranchName, 
                    string GstNo, 
                    string Franchisee_Name, 
                    string ContactNo, 
                    string Branch_Area, 
                    global::System.Nullable<global::System.DateTime> Datetime_Fr, 
                    string Pan_No, 
                    global::System.Nullable<long> Firm_Id, 
                    string Sendermail, 
                    string password, 
                    string AccountName, 
                    string Bankname, 
                    string Accountno, 
                    string IFSCcode, 
                    string Branch, 
                    string Accounttype) {
            if ((PF_Code == null)) {
                throw new global::System.ArgumentNullException("PF_Code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PF_Code));
            }
            if ((F_Address == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(F_Address));
            }
            if ((OwnerName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(OwnerName));
            }
            if ((BranchName == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(BranchName));
            }
            if ((GstNo == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(GstNo));
            }
            if ((Franchisee_Name == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Franchisee_Name));
            }
            if ((ContactNo == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ContactNo));
            }
            if ((Branch_Area == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Branch_Area));
            }
            if ((Datetime_Fr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(Datetime_Fr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Pan_No == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Pan_No));
            }
            if ((Firm_Id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((long)(Firm_Id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Sendermail == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Sendermail));
            }
            if ((password == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(password));
            }
            if ((AccountName == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(AccountName));
            }
            if ((Bankname == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Bankname));
            }
            if ((Accountno == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Accountno));
            }
            if ((IFSCcode == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(IFSCcode));
            }
            if ((Branch == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(Branch));
            }
            if ((Accounttype == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Accounttype));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PF_Code, 
                    string F_Address, 
                    string OwnerName, 
                    string BranchName, 
                    string GstNo, 
                    string Franchisee_Name, 
                    string ContactNo, 
                    string Branch_Area, 
                    global::System.Nullable<global::System.DateTime> Datetime_Fr, 
                    string Pan_No, 
                    global::System.Nullable<long> Firm_Id, 
                    string Sendermail, 
                    string password, 
                    string AccountName, 
                    string Bankname, 
                    string Accountno, 
                    string IFSCcode, 
                    string Branch, 
                    string Accounttype, 
                    string Original_PF_Code) {
            if ((PF_Code == null)) {
                throw new global::System.ArgumentNullException("PF_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PF_Code));
            }
            if ((F_Address == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(F_Address));
            }
            if ((OwnerName == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(OwnerName));
            }
            if ((BranchName == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(BranchName));
            }
            if ((GstNo == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(GstNo));
            }
            if ((Franchisee_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Franchisee_Name));
            }
            if ((ContactNo == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ContactNo));
            }
            if ((Branch_Area == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Branch_Area));
            }
            if ((Datetime_Fr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Datetime_Fr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Pan_No == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Pan_No));
            }
            if ((Firm_Id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(Firm_Id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Sendermail == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Sendermail));
            }
            if ((password == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(password));
            }
            if ((AccountName == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(AccountName));
            }
            if ((Bankname == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Bankname));
            }
            if ((Accountno == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Accountno));
            }
            if ((IFSCcode == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(IFSCcode));
            }
            if ((Branch == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Branch));
            }
            if ((Accounttype == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Accounttype));
            }
            if ((Original_PF_Code == null)) {
                throw new global::System.ArgumentNullException("Original_PF_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_PF_Code));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string F_Address, 
                    string OwnerName, 
                    string BranchName, 
                    string GstNo, 
                    string Franchisee_Name, 
                    string ContactNo, 
                    string Branch_Area, 
                    global::System.Nullable<global::System.DateTime> Datetime_Fr, 
                    string Pan_No, 
                    global::System.Nullable<long> Firm_Id, 
                    string Sendermail, 
                    string password, 
                    string AccountName, 
                    string Bankname, 
                    string Accountno, 
                    string IFSCcode, 
                    string Branch, 
                    string Accounttype, 
                    string Original_PF_Code) {
            return this.Update(Original_PF_Code, F_Address, OwnerName, BranchName, GstNo, Franchisee_Name, ContactNo, Branch_Area, Datetime_Fr, Pan_No, Firm_Id, Sendermail, password, AccountName, Bankname, Accountno, IFSCcode, Branch, Accounttype, Original_PF_Code);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private FranchiseeTableAdapter _franchiseeTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FranchiseeTableAdapter FranchiseeTableAdapter {
            get {
                return this._franchiseeTableAdapter;
            }
            set {
                this._franchiseeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._franchiseeTableAdapter != null) 
                            && (this._franchiseeTableAdapter.Connection != null))) {
                    return this._franchiseeTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._franchiseeTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(FranchiseeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._franchiseeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Franchisee.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._franchiseeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(FranchiseeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._franchiseeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Franchisee.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._franchiseeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(FranchiseeDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._franchiseeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Franchisee.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._franchiseeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(FranchiseeDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._franchiseeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._franchiseeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._franchiseeTableAdapter != null)) {
                    revertConnections.Add(this._franchiseeTableAdapter, this._franchiseeTableAdapter.Connection);
                    this._franchiseeTableAdapter.Connection = ((global::Microsoft.Data.SqlClient.SqlConnection)(workConnection));
                    this._franchiseeTableAdapter.Transaction = ((global::Microsoft.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._franchiseeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._franchiseeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._franchiseeTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._franchiseeTableAdapter != null)) {
                    this._franchiseeTableAdapter.Connection = ((global::Microsoft.Data.SqlClient.SqlConnection)(revertConnections[this._franchiseeTableAdapter]));
                    this._franchiseeTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591